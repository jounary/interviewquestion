## 设计模式
### 单例模式
单例模式是Java中最简单的设计模式之一，这种模式涉及到单个类，该类创建自己的对象同时确保只有单个对象被创建，这个类提供了一种访问其唯一的对象的方式，可以直接访问，不需要实例化该类的对象。
单例模式有6种实现方式:

1.懒汉模式  
```java
public class signleton{
    //饿汉模式
    private static final signleton instance = new signleton();
    public static signleton getInstance(){
        return instance;
    }
    
    //懒汉模式
    private static signleton instance2 = null;
    public static signleton getInstance2(){
        if(instance2 == null){
            instance2 = new signleton();
        }
        return instance2;
    }
    
    //懒汉模式优化1
    public static synchronized signleton getInstance3(){
        if(instance2 == null){
            instance2 = new signleton();
        }
        return instance2;
    }
    
    //懒汉模式优化2
    public static synchronized signleton getInstance4(){
        if(instance2 == null){
            synchronized (signleton.class){
                if(instance2 == null){
                    instance2 = new signleton();
                }
            }
        }
        return instance2;
    }
}
```

